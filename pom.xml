<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.shaldnikita</groupId>
    <artifactId>reminder</artifactId>
    <version>0.1</version>
    <packaging>pom</packaging>

    <modules>
        <module>notifier</module>
        <module>scheduler</module>
        <module>users-service</module>
        <module>notifications-service</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <scala.version>2.13.0</scala.version>
        <scala.major>2.13</scala.major>
        <java.version>1.8</java.version>
    </properties>


    <dependencies>
        <!--SCALA-->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-async_${scala.major}</artifactId>
            <version>0.10.0</version>
        </dependency>

        <!--WEB-->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http_${scala.major}</artifactId>
            <version>10.1.8</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-spray-json_${scala.major}</artifactId>
            <version>10.1.8</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream_${scala.major}</artifactId>
            <version>2.5.23</version>
        </dependency>

        <!--COMMON-->
        <dependency>
            <groupId>org.typelevel</groupId>
            <artifactId>cats-core_${scala.major}</artifactId>
            <version>2.0.0-M4</version>
        </dependency>
        <dependency>
            <groupId>com.beachape</groupId>
            <artifactId>enumeratum_${scala.major}</artifactId>
            <version>1.5.13</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
            <version>1.7.26</version>
        </dependency>



        <!-- TESTING-->
        <dependency>
            <groupId>org.scalamock</groupId>
            <artifactId>scalamock_${scala.major}</artifactId>
            <version>4.3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.major}</artifactId>
            <version>3.0.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-testkit_${scala.major}</artifactId>
            <version>10.1.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-testkit_${scala.major}</artifactId>
            <version>2.5.23</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.11.3</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.antipathy</groupId>
                <artifactId>mvn-scalafmt_2.12</artifactId>
                <version>0.11_1.5.1</version>
                <configuration>
                    <parameters>--diff</parameters> <!-- (Optional) Additional command line arguments -->
                    <skip>false</skip> <!-- (Optional) skip formatting -->
                    <configLocation>${project.basedir}/path/to/scalafmt.conf</configLocation> <!-- (Optional) config location -->
                    <configRequired>false</configRequired><!-- (Optional) raise an error if configLocation is missing or invalid (otherwise use Scalafmt defaults) -->
                    <sourceDirectories> <!-- (Optional) Paths to source-directories. Overrides ${project.build.sourceDirectory} -->
                        <param>${project.basedir}/src/main/scala</param>
                    </sourceDirectories>
                    <testSourceDirectories> <!-- (Optional) Paths to test-source-directories. Overrides ${project.build.testSourceDirectory} -->
                        <param>${project.basedir}/src/test/scala</param>
                    </testSourceDirectories>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>